package com.lab.sdt.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ExpeEstimExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public ExpeEstimExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdexestimIsNull() {
            addCriterion("idExEstim is null");
            return (Criteria) this;
        }

        public Criteria andIdexestimIsNotNull() {
            addCriterion("idExEstim is not null");
            return (Criteria) this;
        }

        public Criteria andIdexestimEqualTo(Integer value) {
            addCriterion("idExEstim =", value, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimNotEqualTo(Integer value) {
            addCriterion("idExEstim <>", value, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimGreaterThan(Integer value) {
            addCriterion("idExEstim >", value, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimGreaterThanOrEqualTo(Integer value) {
            addCriterion("idExEstim >=", value, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimLessThan(Integer value) {
            addCriterion("idExEstim <", value, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimLessThanOrEqualTo(Integer value) {
            addCriterion("idExEstim <=", value, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimIn(List<Integer> values) {
            addCriterion("idExEstim in", values, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimNotIn(List<Integer> values) {
            addCriterion("idExEstim not in", values, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimBetween(Integer value1, Integer value2) {
            addCriterion("idExEstim between", value1, value2, "idexestim");
            return (Criteria) this;
        }

        public Criteria andIdexestimNotBetween(Integer value1, Integer value2) {
            addCriterion("idExEstim not between", value1, value2, "idexestim");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionIsNull() {
            addCriterion("fechaEstimulacion is null");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionIsNotNull() {
            addCriterion("fechaEstimulacion is not null");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionEqualTo(Date value) {
            addCriterionForJDBCDate("fechaEstimulacion =", value, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionNotEqualTo(Date value) {
            addCriterionForJDBCDate("fechaEstimulacion <>", value, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionGreaterThan(Date value) {
            addCriterionForJDBCDate("fechaEstimulacion >", value, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fechaEstimulacion >=", value, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionLessThan(Date value) {
            addCriterionForJDBCDate("fechaEstimulacion <", value, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fechaEstimulacion <=", value, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionIn(List<Date> values) {
            addCriterionForJDBCDate("fechaEstimulacion in", values, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionNotIn(List<Date> values) {
            addCriterionForJDBCDate("fechaEstimulacion not in", values, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fechaEstimulacion between", value1, value2, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andFechaestimulacionNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fechaEstimulacion not between", value1, value2, "fechaestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteIsNull() {
            addCriterion("idExpediente is null");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteIsNotNull() {
            addCriterion("idExpediente is not null");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteEqualTo(Integer value) {
            addCriterion("idExpediente =", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteNotEqualTo(Integer value) {
            addCriterion("idExpediente <>", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteGreaterThan(Integer value) {
            addCriterion("idExpediente >", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteGreaterThanOrEqualTo(Integer value) {
            addCriterion("idExpediente >=", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteLessThan(Integer value) {
            addCriterion("idExpediente <", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteLessThanOrEqualTo(Integer value) {
            addCriterion("idExpediente <=", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteIn(List<Integer> values) {
            addCriterion("idExpediente in", values, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteNotIn(List<Integer> values) {
            addCriterion("idExpediente not in", values, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteBetween(Integer value1, Integer value2) {
            addCriterion("idExpediente between", value1, value2, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteNotBetween(Integer value1, Integer value2) {
            addCriterion("idExpediente not between", value1, value2, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionIsNull() {
            addCriterion("idEstimulacion is null");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionIsNotNull() {
            addCriterion("idEstimulacion is not null");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionEqualTo(Integer value) {
            addCriterion("idEstimulacion =", value, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionNotEqualTo(Integer value) {
            addCriterion("idEstimulacion <>", value, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionGreaterThan(Integer value) {
            addCriterion("idEstimulacion >", value, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("idEstimulacion >=", value, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionLessThan(Integer value) {
            addCriterion("idEstimulacion <", value, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionLessThanOrEqualTo(Integer value) {
            addCriterion("idEstimulacion <=", value, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionIn(List<Integer> values) {
            addCriterion("idEstimulacion in", values, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionNotIn(List<Integer> values) {
            addCriterion("idEstimulacion not in", values, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionBetween(Integer value1, Integer value2) {
            addCriterion("idEstimulacion between", value1, value2, "idestimulacion");
            return (Criteria) this;
        }

        public Criteria andIdestimulacionNotBetween(Integer value1, Integer value2) {
            addCriterion("idEstimulacion not between", value1, value2, "idestimulacion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expe_estim
     *
     * @mbg.generated do_not_delete_during_merge Mon May 20 14:45:29 CDT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expe_estim
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}