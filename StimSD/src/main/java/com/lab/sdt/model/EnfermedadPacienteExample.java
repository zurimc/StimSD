package com.lab.sdt.model;

import java.util.ArrayList;
import java.util.List;

public class EnfermedadPacienteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public EnfermedadPacienteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdenfermedadPacienteIsNull() {
            addCriterion("idEnfermedad_paciente is null");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteIsNotNull() {
            addCriterion("idEnfermedad_paciente is not null");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteEqualTo(Integer value) {
            addCriterion("idEnfermedad_paciente =", value, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteNotEqualTo(Integer value) {
            addCriterion("idEnfermedad_paciente <>", value, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteGreaterThan(Integer value) {
            addCriterion("idEnfermedad_paciente >", value, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteGreaterThanOrEqualTo(Integer value) {
            addCriterion("idEnfermedad_paciente >=", value, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteLessThan(Integer value) {
            addCriterion("idEnfermedad_paciente <", value, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteLessThanOrEqualTo(Integer value) {
            addCriterion("idEnfermedad_paciente <=", value, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteIn(List<Integer> values) {
            addCriterion("idEnfermedad_paciente in", values, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteNotIn(List<Integer> values) {
            addCriterion("idEnfermedad_paciente not in", values, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteBetween(Integer value1, Integer value2) {
            addCriterion("idEnfermedad_paciente between", value1, value2, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadPacienteNotBetween(Integer value1, Integer value2) {
            addCriterion("idEnfermedad_paciente not between", value1, value2, "idenfermedadPaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteIsNull() {
            addCriterion("idPaciente is null");
            return (Criteria) this;
        }

        public Criteria andIdpacienteIsNotNull() {
            addCriterion("idPaciente is not null");
            return (Criteria) this;
        }

        public Criteria andIdpacienteEqualTo(Integer value) {
            addCriterion("idPaciente =", value, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteNotEqualTo(Integer value) {
            addCriterion("idPaciente <>", value, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteGreaterThan(Integer value) {
            addCriterion("idPaciente >", value, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteGreaterThanOrEqualTo(Integer value) {
            addCriterion("idPaciente >=", value, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteLessThan(Integer value) {
            addCriterion("idPaciente <", value, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteLessThanOrEqualTo(Integer value) {
            addCriterion("idPaciente <=", value, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteIn(List<Integer> values) {
            addCriterion("idPaciente in", values, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteNotIn(List<Integer> values) {
            addCriterion("idPaciente not in", values, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteBetween(Integer value1, Integer value2) {
            addCriterion("idPaciente between", value1, value2, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdpacienteNotBetween(Integer value1, Integer value2) {
            addCriterion("idPaciente not between", value1, value2, "idpaciente");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadIsNull() {
            addCriterion("idEnfermedad is null");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadIsNotNull() {
            addCriterion("idEnfermedad is not null");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadEqualTo(Integer value) {
            addCriterion("idEnfermedad =", value, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadNotEqualTo(Integer value) {
            addCriterion("idEnfermedad <>", value, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadGreaterThan(Integer value) {
            addCriterion("idEnfermedad >", value, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadGreaterThanOrEqualTo(Integer value) {
            addCriterion("idEnfermedad >=", value, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadLessThan(Integer value) {
            addCriterion("idEnfermedad <", value, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadLessThanOrEqualTo(Integer value) {
            addCriterion("idEnfermedad <=", value, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadIn(List<Integer> values) {
            addCriterion("idEnfermedad in", values, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadNotIn(List<Integer> values) {
            addCriterion("idEnfermedad not in", values, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadBetween(Integer value1, Integer value2) {
            addCriterion("idEnfermedad between", value1, value2, "idenfermedad");
            return (Criteria) this;
        }

        public Criteria andIdenfermedadNotBetween(Integer value1, Integer value2) {
            addCriterion("idEnfermedad not between", value1, value2, "idenfermedad");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated do_not_delete_during_merge Mon May 20 14:45:29 CDT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table enfermedad_paciente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}