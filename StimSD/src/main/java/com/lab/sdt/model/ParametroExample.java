package com.lab.sdt.model;

import java.util.ArrayList;
import java.util.List;

public class ParametroExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public ParametroExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdparametroIsNull() {
            addCriterion("idParametro is null");
            return (Criteria) this;
        }

        public Criteria andIdparametroIsNotNull() {
            addCriterion("idParametro is not null");
            return (Criteria) this;
        }

        public Criteria andIdparametroEqualTo(Integer value) {
            addCriterion("idParametro =", value, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroNotEqualTo(Integer value) {
            addCriterion("idParametro <>", value, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroGreaterThan(Integer value) {
            addCriterion("idParametro >", value, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroGreaterThanOrEqualTo(Integer value) {
            addCriterion("idParametro >=", value, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroLessThan(Integer value) {
            addCriterion("idParametro <", value, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroLessThanOrEqualTo(Integer value) {
            addCriterion("idParametro <=", value, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroIn(List<Integer> values) {
            addCriterion("idParametro in", values, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroNotIn(List<Integer> values) {
            addCriterion("idParametro not in", values, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroBetween(Integer value1, Integer value2) {
            addCriterion("idParametro between", value1, value2, "idparametro");
            return (Criteria) this;
        }

        public Criteria andIdparametroNotBetween(Integer value1, Integer value2) {
            addCriterion("idParametro not between", value1, value2, "idparametro");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaIsNull() {
            addCriterion("frecuencia is null");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaIsNotNull() {
            addCriterion("frecuencia is not null");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaEqualTo(Integer value) {
            addCriterion("frecuencia =", value, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaNotEqualTo(Integer value) {
            addCriterion("frecuencia <>", value, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaGreaterThan(Integer value) {
            addCriterion("frecuencia >", value, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaGreaterThanOrEqualTo(Integer value) {
            addCriterion("frecuencia >=", value, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaLessThan(Integer value) {
            addCriterion("frecuencia <", value, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaLessThanOrEqualTo(Integer value) {
            addCriterion("frecuencia <=", value, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaIn(List<Integer> values) {
            addCriterion("frecuencia in", values, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaNotIn(List<Integer> values) {
            addCriterion("frecuencia not in", values, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaBetween(Integer value1, Integer value2) {
            addCriterion("frecuencia between", value1, value2, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andFrecuenciaNotBetween(Integer value1, Integer value2) {
            addCriterion("frecuencia not between", value1, value2, "frecuencia");
            return (Criteria) this;
        }

        public Criteria andAmplitudIsNull() {
            addCriterion("amplitud is null");
            return (Criteria) this;
        }

        public Criteria andAmplitudIsNotNull() {
            addCriterion("amplitud is not null");
            return (Criteria) this;
        }

        public Criteria andAmplitudEqualTo(String value) {
            addCriterion("amplitud =", value, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudNotEqualTo(String value) {
            addCriterion("amplitud <>", value, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudGreaterThan(String value) {
            addCriterion("amplitud >", value, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudGreaterThanOrEqualTo(String value) {
            addCriterion("amplitud >=", value, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudLessThan(String value) {
            addCriterion("amplitud <", value, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudLessThanOrEqualTo(String value) {
            addCriterion("amplitud <=", value, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudLike(String value) {
            addCriterion("amplitud like", value, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudNotLike(String value) {
            addCriterion("amplitud not like", value, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudIn(List<String> values) {
            addCriterion("amplitud in", values, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudNotIn(List<String> values) {
            addCriterion("amplitud not in", values, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudBetween(String value1, String value2) {
            addCriterion("amplitud between", value1, value2, "amplitud");
            return (Criteria) this;
        }

        public Criteria andAmplitudNotBetween(String value1, String value2) {
            addCriterion("amplitud not between", value1, value2, "amplitud");
            return (Criteria) this;
        }

        public Criteria andTiempoIsNull() {
            addCriterion("tiempo is null");
            return (Criteria) this;
        }

        public Criteria andTiempoIsNotNull() {
            addCriterion("tiempo is not null");
            return (Criteria) this;
        }

        public Criteria andTiempoEqualTo(String value) {
            addCriterion("tiempo =", value, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoNotEqualTo(String value) {
            addCriterion("tiempo <>", value, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoGreaterThan(String value) {
            addCriterion("tiempo >", value, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoGreaterThanOrEqualTo(String value) {
            addCriterion("tiempo >=", value, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoLessThan(String value) {
            addCriterion("tiempo <", value, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoLessThanOrEqualTo(String value) {
            addCriterion("tiempo <=", value, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoLike(String value) {
            addCriterion("tiempo like", value, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoNotLike(String value) {
            addCriterion("tiempo not like", value, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoIn(List<String> values) {
            addCriterion("tiempo in", values, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoNotIn(List<String> values) {
            addCriterion("tiempo not in", values, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoBetween(String value1, String value2) {
            addCriterion("tiempo between", value1, value2, "tiempo");
            return (Criteria) this;
        }

        public Criteria andTiempoNotBetween(String value1, String value2) {
            addCriterion("tiempo not between", value1, value2, "tiempo");
            return (Criteria) this;
        }

        public Criteria andIdequipoIsNull() {
            addCriterion("idEquipo is null");
            return (Criteria) this;
        }

        public Criteria andIdequipoIsNotNull() {
            addCriterion("idEquipo is not null");
            return (Criteria) this;
        }

        public Criteria andIdequipoEqualTo(Integer value) {
            addCriterion("idEquipo =", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoNotEqualTo(Integer value) {
            addCriterion("idEquipo <>", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoGreaterThan(Integer value) {
            addCriterion("idEquipo >", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoGreaterThanOrEqualTo(Integer value) {
            addCriterion("idEquipo >=", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoLessThan(Integer value) {
            addCriterion("idEquipo <", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoLessThanOrEqualTo(Integer value) {
            addCriterion("idEquipo <=", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoIn(List<Integer> values) {
            addCriterion("idEquipo in", values, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoNotIn(List<Integer> values) {
            addCriterion("idEquipo not in", values, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoBetween(Integer value1, Integer value2) {
            addCriterion("idEquipo between", value1, value2, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoNotBetween(Integer value1, Integer value2) {
            addCriterion("idEquipo not between", value1, value2, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdondaIsNull() {
            addCriterion("idOnda is null");
            return (Criteria) this;
        }

        public Criteria andIdondaIsNotNull() {
            addCriterion("idOnda is not null");
            return (Criteria) this;
        }

        public Criteria andIdondaEqualTo(Integer value) {
            addCriterion("idOnda =", value, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaNotEqualTo(Integer value) {
            addCriterion("idOnda <>", value, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaGreaterThan(Integer value) {
            addCriterion("idOnda >", value, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaGreaterThanOrEqualTo(Integer value) {
            addCriterion("idOnda >=", value, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaLessThan(Integer value) {
            addCriterion("idOnda <", value, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaLessThanOrEqualTo(Integer value) {
            addCriterion("idOnda <=", value, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaIn(List<Integer> values) {
            addCriterion("idOnda in", values, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaNotIn(List<Integer> values) {
            addCriterion("idOnda not in", values, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaBetween(Integer value1, Integer value2) {
            addCriterion("idOnda between", value1, value2, "idonda");
            return (Criteria) this;
        }

        public Criteria andIdondaNotBetween(Integer value1, Integer value2) {
            addCriterion("idOnda not between", value1, value2, "idonda");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parametro
     *
     * @mbg.generated do_not_delete_during_merge Mon May 20 14:45:29 CDT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parametro
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}