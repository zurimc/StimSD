package com.lab.sdt.model;

import java.util.ArrayList;
import java.util.List;

public class FotosExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public FotosExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdfotoIsNull() {
            addCriterion("idFoto is null");
            return (Criteria) this;
        }

        public Criteria andIdfotoIsNotNull() {
            addCriterion("idFoto is not null");
            return (Criteria) this;
        }

        public Criteria andIdfotoEqualTo(Integer value) {
            addCriterion("idFoto =", value, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoNotEqualTo(Integer value) {
            addCriterion("idFoto <>", value, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoGreaterThan(Integer value) {
            addCriterion("idFoto >", value, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoGreaterThanOrEqualTo(Integer value) {
            addCriterion("idFoto >=", value, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoLessThan(Integer value) {
            addCriterion("idFoto <", value, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoLessThanOrEqualTo(Integer value) {
            addCriterion("idFoto <=", value, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoIn(List<Integer> values) {
            addCriterion("idFoto in", values, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoNotIn(List<Integer> values) {
            addCriterion("idFoto not in", values, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoBetween(Integer value1, Integer value2) {
            addCriterion("idFoto between", value1, value2, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdfotoNotBetween(Integer value1, Integer value2) {
            addCriterion("idFoto not between", value1, value2, "idfoto");
            return (Criteria) this;
        }

        public Criteria andIdusuarioIsNull() {
            addCriterion("idUsuario is null");
            return (Criteria) this;
        }

        public Criteria andIdusuarioIsNotNull() {
            addCriterion("idUsuario is not null");
            return (Criteria) this;
        }

        public Criteria andIdusuarioEqualTo(Integer value) {
            addCriterion("idUsuario =", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioNotEqualTo(Integer value) {
            addCriterion("idUsuario <>", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioGreaterThan(Integer value) {
            addCriterion("idUsuario >", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioGreaterThanOrEqualTo(Integer value) {
            addCriterion("idUsuario >=", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioLessThan(Integer value) {
            addCriterion("idUsuario <", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioLessThanOrEqualTo(Integer value) {
            addCriterion("idUsuario <=", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioIn(List<Integer> values) {
            addCriterion("idUsuario in", values, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioNotIn(List<Integer> values) {
            addCriterion("idUsuario not in", values, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioBetween(Integer value1, Integer value2) {
            addCriterion("idUsuario between", value1, value2, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioNotBetween(Integer value1, Integer value2) {
            addCriterion("idUsuario not between", value1, value2, "idusuario");
            return (Criteria) this;
        }

        public Criteria andNombreFotoIsNull() {
            addCriterion("nombre_foto is null");
            return (Criteria) this;
        }

        public Criteria andNombreFotoIsNotNull() {
            addCriterion("nombre_foto is not null");
            return (Criteria) this;
        }

        public Criteria andNombreFotoEqualTo(String value) {
            addCriterion("nombre_foto =", value, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoNotEqualTo(String value) {
            addCriterion("nombre_foto <>", value, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoGreaterThan(String value) {
            addCriterion("nombre_foto >", value, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoGreaterThanOrEqualTo(String value) {
            addCriterion("nombre_foto >=", value, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoLessThan(String value) {
            addCriterion("nombre_foto <", value, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoLessThanOrEqualTo(String value) {
            addCriterion("nombre_foto <=", value, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoLike(String value) {
            addCriterion("nombre_foto like", value, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoNotLike(String value) {
            addCriterion("nombre_foto not like", value, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoIn(List<String> values) {
            addCriterion("nombre_foto in", values, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoNotIn(List<String> values) {
            addCriterion("nombre_foto not in", values, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoBetween(String value1, String value2) {
            addCriterion("nombre_foto between", value1, value2, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andNombreFotoNotBetween(String value1, String value2) {
            addCriterion("nombre_foto not between", value1, value2, "nombreFoto");
            return (Criteria) this;
        }

        public Criteria andFoto1IsNull() {
            addCriterion("foto1 is null");
            return (Criteria) this;
        }

        public Criteria andFoto1IsNotNull() {
            addCriterion("foto1 is not null");
            return (Criteria) this;
        }

        public Criteria andFoto1EqualTo(String value) {
            addCriterion("foto1 =", value, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1NotEqualTo(String value) {
            addCriterion("foto1 <>", value, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1GreaterThan(String value) {
            addCriterion("foto1 >", value, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1GreaterThanOrEqualTo(String value) {
            addCriterion("foto1 >=", value, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1LessThan(String value) {
            addCriterion("foto1 <", value, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1LessThanOrEqualTo(String value) {
            addCriterion("foto1 <=", value, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1Like(String value) {
            addCriterion("foto1 like", value, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1NotLike(String value) {
            addCriterion("foto1 not like", value, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1In(List<String> values) {
            addCriterion("foto1 in", values, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1NotIn(List<String> values) {
            addCriterion("foto1 not in", values, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1Between(String value1, String value2) {
            addCriterion("foto1 between", value1, value2, "foto1");
            return (Criteria) this;
        }

        public Criteria andFoto1NotBetween(String value1, String value2) {
            addCriterion("foto1 not between", value1, value2, "foto1");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fotos
     *
     * @mbg.generated do_not_delete_during_merge Mon May 20 14:45:29 CDT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fotos
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}