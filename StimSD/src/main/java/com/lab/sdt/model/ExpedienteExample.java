package com.lab.sdt.model;

import java.util.ArrayList;
import java.util.List;

public class ExpedienteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public ExpedienteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdexpedienteIsNull() {
            addCriterion("idExpediente is null");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteIsNotNull() {
            addCriterion("idExpediente is not null");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteEqualTo(Integer value) {
            addCriterion("idExpediente =", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteNotEqualTo(Integer value) {
            addCriterion("idExpediente <>", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteGreaterThan(Integer value) {
            addCriterion("idExpediente >", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteGreaterThanOrEqualTo(Integer value) {
            addCriterion("idExpediente >=", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteLessThan(Integer value) {
            addCriterion("idExpediente <", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteLessThanOrEqualTo(Integer value) {
            addCriterion("idExpediente <=", value, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteIn(List<Integer> values) {
            addCriterion("idExpediente in", values, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteNotIn(List<Integer> values) {
            addCriterion("idExpediente not in", values, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteBetween(Integer value1, Integer value2) {
            addCriterion("idExpediente between", value1, value2, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andIdexpedienteNotBetween(Integer value1, Integer value2) {
            addCriterion("idExpediente not between", value1, value2, "idexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteIsNull() {
            addCriterion("noExpediente is null");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteIsNotNull() {
            addCriterion("noExpediente is not null");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteEqualTo(String value) {
            addCriterion("noExpediente =", value, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteNotEqualTo(String value) {
            addCriterion("noExpediente <>", value, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteGreaterThan(String value) {
            addCriterion("noExpediente >", value, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteGreaterThanOrEqualTo(String value) {
            addCriterion("noExpediente >=", value, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteLessThan(String value) {
            addCriterion("noExpediente <", value, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteLessThanOrEqualTo(String value) {
            addCriterion("noExpediente <=", value, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteLike(String value) {
            addCriterion("noExpediente like", value, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteNotLike(String value) {
            addCriterion("noExpediente not like", value, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteIn(List<String> values) {
            addCriterion("noExpediente in", values, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteNotIn(List<String> values) {
            addCriterion("noExpediente not in", values, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteBetween(String value1, String value2) {
            addCriterion("noExpediente between", value1, value2, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andNoexpedienteNotBetween(String value1, String value2) {
            addCriterion("noExpediente not between", value1, value2, "noexpediente");
            return (Criteria) this;
        }

        public Criteria andIdusuarioIsNull() {
            addCriterion("idUsuario is null");
            return (Criteria) this;
        }

        public Criteria andIdusuarioIsNotNull() {
            addCriterion("idUsuario is not null");
            return (Criteria) this;
        }

        public Criteria andIdusuarioEqualTo(Integer value) {
            addCriterion("idUsuario =", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioNotEqualTo(Integer value) {
            addCriterion("idUsuario <>", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioGreaterThan(Integer value) {
            addCriterion("idUsuario >", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioGreaterThanOrEqualTo(Integer value) {
            addCriterion("idUsuario >=", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioLessThan(Integer value) {
            addCriterion("idUsuario <", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioLessThanOrEqualTo(Integer value) {
            addCriterion("idUsuario <=", value, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioIn(List<Integer> values) {
            addCriterion("idUsuario in", values, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioNotIn(List<Integer> values) {
            addCriterion("idUsuario not in", values, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioBetween(Integer value1, Integer value2) {
            addCriterion("idUsuario between", value1, value2, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdusuarioNotBetween(Integer value1, Integer value2) {
            addCriterion("idUsuario not between", value1, value2, "idusuario");
            return (Criteria) this;
        }

        public Criteria andIdhospitalIsNull() {
            addCriterion("idHospital is null");
            return (Criteria) this;
        }

        public Criteria andIdhospitalIsNotNull() {
            addCriterion("idHospital is not null");
            return (Criteria) this;
        }

        public Criteria andIdhospitalEqualTo(Integer value) {
            addCriterion("idHospital =", value, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalNotEqualTo(Integer value) {
            addCriterion("idHospital <>", value, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalGreaterThan(Integer value) {
            addCriterion("idHospital >", value, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalGreaterThanOrEqualTo(Integer value) {
            addCriterion("idHospital >=", value, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalLessThan(Integer value) {
            addCriterion("idHospital <", value, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalLessThanOrEqualTo(Integer value) {
            addCriterion("idHospital <=", value, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalIn(List<Integer> values) {
            addCriterion("idHospital in", values, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalNotIn(List<Integer> values) {
            addCriterion("idHospital not in", values, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalBetween(Integer value1, Integer value2) {
            addCriterion("idHospital between", value1, value2, "idhospital");
            return (Criteria) this;
        }

        public Criteria andIdhospitalNotBetween(Integer value1, Integer value2) {
            addCriterion("idHospital not between", value1, value2, "idhospital");
            return (Criteria) this;
        }

        public Criteria andDescripcionIsNull() {
            addCriterion("descripcion is null");
            return (Criteria) this;
        }

        public Criteria andDescripcionIsNotNull() {
            addCriterion("descripcion is not null");
            return (Criteria) this;
        }

        public Criteria andDescripcionEqualTo(String value) {
            addCriterion("descripcion =", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotEqualTo(String value) {
            addCriterion("descripcion <>", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionGreaterThan(String value) {
            addCriterion("descripcion >", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
            addCriterion("descripcion >=", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLessThan(String value) {
            addCriterion("descripcion <", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLessThanOrEqualTo(String value) {
            addCriterion("descripcion <=", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLike(String value) {
            addCriterion("descripcion like", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotLike(String value) {
            addCriterion("descripcion not like", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionIn(List<String> values) {
            addCriterion("descripcion in", values, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotIn(List<String> values) {
            addCriterion("descripcion not in", values, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionBetween(String value1, String value2) {
            addCriterion("descripcion between", value1, value2, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotBetween(String value1, String value2) {
            addCriterion("descripcion not between", value1, value2, "descripcion");
            return (Criteria) this;
        }

        public Criteria andIdequipoIsNull() {
            addCriterion("idEquipo is null");
            return (Criteria) this;
        }

        public Criteria andIdequipoIsNotNull() {
            addCriterion("idEquipo is not null");
            return (Criteria) this;
        }

        public Criteria andIdequipoEqualTo(Integer value) {
            addCriterion("idEquipo =", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoNotEqualTo(Integer value) {
            addCriterion("idEquipo <>", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoGreaterThan(Integer value) {
            addCriterion("idEquipo >", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoGreaterThanOrEqualTo(Integer value) {
            addCriterion("idEquipo >=", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoLessThan(Integer value) {
            addCriterion("idEquipo <", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoLessThanOrEqualTo(Integer value) {
            addCriterion("idEquipo <=", value, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoIn(List<Integer> values) {
            addCriterion("idEquipo in", values, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoNotIn(List<Integer> values) {
            addCriterion("idEquipo not in", values, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoBetween(Integer value1, Integer value2) {
            addCriterion("idEquipo between", value1, value2, "idequipo");
            return (Criteria) this;
        }

        public Criteria andIdequipoNotBetween(Integer value1, Integer value2) {
            addCriterion("idEquipo not between", value1, value2, "idequipo");
            return (Criteria) this;
        }

        public Criteria andEstatusIsNull() {
            addCriterion("estatus is null");
            return (Criteria) this;
        }

        public Criteria andEstatusIsNotNull() {
            addCriterion("estatus is not null");
            return (Criteria) this;
        }

        public Criteria andEstatusEqualTo(String value) {
            addCriterion("estatus =", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusNotEqualTo(String value) {
            addCriterion("estatus <>", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusGreaterThan(String value) {
            addCriterion("estatus >", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusGreaterThanOrEqualTo(String value) {
            addCriterion("estatus >=", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusLessThan(String value) {
            addCriterion("estatus <", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusLessThanOrEqualTo(String value) {
            addCriterion("estatus <=", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusLike(String value) {
            addCriterion("estatus like", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusNotLike(String value) {
            addCriterion("estatus not like", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusIn(List<String> values) {
            addCriterion("estatus in", values, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusNotIn(List<String> values) {
            addCriterion("estatus not in", values, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusBetween(String value1, String value2) {
            addCriterion("estatus between", value1, value2, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusNotBetween(String value1, String value2) {
            addCriterion("estatus not between", value1, value2, "estatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expediente
     *
     * @mbg.generated do_not_delete_during_merge Mon May 20 14:45:29 CDT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expediente
     *
     * @mbg.generated Mon May 20 14:45:29 CDT 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}